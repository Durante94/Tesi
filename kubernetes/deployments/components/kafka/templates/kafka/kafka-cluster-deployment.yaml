apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: {{ .Values.global.internalKafkaClusterName }}
  namespace: kafka
spec:
  kafkaExporter: {}
  entityOperator:
    topicOperator: {}
    userOperator: {}
  kafka:
    config:
      auto.create.topics.enable: 'true'
      default.replication.factor: 1
      inter.broker.protocol.version: '3.1'
      min.insync.replicas: 1
      offsets.topic.replication.factor: 1
      transaction.state.log.min.isr: 1
      transaction.state.log.replication.factor: 1
      delete.topic.enable: 'true'
      log.retention.ms: 100000
      log.segment.delete.delay.ms: 50000
      offsets.topic.replication.factor: 1
    listeners:
      - name: plain
        port: 9092
        tls: false
        type: internal
      - configuration:
          bootstrap:
            nodePort: 30829
          brokers:
            {{- range  $i, $e := untilStep 30830 (int (add 30830 (int .Values.global.kafkaReplicas))) 1 }} 
            - broker: {{ $i }}
              nodePort: {{ $e }}
            {{- end }}
        name: external
        port: 9093
        tls: false
        type: nodeport
    replicas: {{ int .Values.global.kafkaReplicas }}
    storage:
      class: {{ .Values.global.storageClassName }}
      size: {{ .Values.global.kafkaStorageSize }}
      type: persistent-claim
    template:
      pod:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                      - key: strimzi.io/name
                        operator: In
                        values:
                          - {{ .Values.global.internalKafkaClusterName }}-kafka
                  topologyKey: kubernetes.io/hostname
    version: 3.1.0
  zookeeper:
    replicas: {{ int .Values.global.zookeeperReplicas }}
    storage:
      class: {{ .Values.global.storageClassName }}
      size: {{ .Values.global.zookeeperStorageSize }}
      type: persistent-claim
    template:
      pod:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                      - key: strimzi.io/name
                        operator: In
                        values:
                          - {{ .Values.global.internalKafkaClusterName }}-zookeeper
                  topologyKey: kubernetes.io/hostname

